doctype html
html
  head
    meta[name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1.0, user-scalable=no"]
    title
      = t(:logo_name)
    = stylesheet_link_tag    'application', media: 'all', 'data-turbolinks-track' => true
    = javascript_include_tag 'application', 'data-turbolinks-track' => true
    = csrf_meta_tags
  body[class="#{@body_css_class}"]
    = Gon::Base.render_data({})
    - if display_navbar?
      .navbar-spacer
      nav#brand_navbar.navbar.navbar-fixed-top[role="navigation"]
        .container-fluid
          .navbar-right-btns.pull-right
            - with_options class: 'btn btn-blue btn-navbar' do |v|
              - if user_signed_in?
                  = v.link_to '预约服务', new_user_order_path
                  = v.link_to '我的订单', user_orders_path
              - elsif handyman_signed_in?
                = v.link_to '开始抢单', handyman_orders_path
                = v.link_to '我的订单', handyman_contracts_path
          .navbar-header
            a.visible-xs-inline-block.btn.navbar-btn.pull-left.nav_toggle[type="button" data-toggle="collapse" data-target="#navbar-collapse"]
              span.sr-only
                | Toggle navigation
              .logo-img
          #navbar-collapse.collapse.navbar-collapse
            ul.nav.navbar-nav.navbar-left
              li = link_to '首页', root_path
              li.devider
                - if handyman_signed_in?
                  li = link_to '账户', handyman_profile_path
                  li = link_to '提现', handyman_withdrawals_path
                  li = link_to t(:sign_out), destroy_account_session_path, method: :delete
                - elsif user_signed_in?
                  = link_to t(:sign_out), destroy_account_session_path, method: :delete
                - else
                  li = link_to '加盟管家', new_handyman_registration_path
                  li = link_to t(:sign_up), new_user_registration_path
                  li = link_to t(:sign_in), new_account_session_path
    .main
      - if content_for?(:container)
        .container
          = render_flash_message
          = yield :container
      - elsif content_for?(:row)
        .container
          .row
            = render_flash_message
            = yield :row
      - elsif content_for?(:grid)
        .container
          .row
            .col-md-6.col-md-offset-3
              = render_flash_message
              = yield :grid
      - else
        = render_flash_message
        = yield
